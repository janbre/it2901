Index: httpcore-nio/src/main/java/org/apache/http/impl/nio/reactor/IOSessionImpl.java
===================================================================
--- httpcore-nio/src/main/java/org/apache/http/impl/nio/reactor/IOSessionImpl.java	(revision 1297407)
+++ httpcore-nio/src/main/java/org/apache/http/impl/nio/reactor/IOSessionImpl.java	(working copy)
@@ -30,6 +30,7 @@
 import java.io.IOException;
 import java.net.InetSocketAddress;
 import java.net.SocketAddress;
+import java.net.SocketException;
 import java.nio.channels.ByteChannel;
 import java.nio.channels.Channel;
 import java.nio.channels.SelectionKey;
@@ -353,4 +354,30 @@
         return buffer.toString();
     }
 
+    /**
+     * Sets the traffic class on the channel's socket if it is a {@link SocketChannel}
+     *  
+     * @param tc the new Traffic Class. Must be 0 <= tc <= 255. 0 is default.
+     * @throws SocketException if there is an error setting the traffic class or type-of-service.
+     * @throws IllegalArgumentException if tc is not a valid traffic class value.
+     */
+    public synchronized void setTrafficClass(int tc) throws SocketException {
+        if(channel instanceof SocketChannel){
+            ((SocketChannel)channel).socket().setTrafficClass(tc);
+        }
+    }
+
+    /**
+     * Gets the traffic class from the channel's socket if it is a {@link SocketChannel}
+     *  
+     * @return int channel.socket().getTrafficClass() if the channel is a {@link SocketChannel}, otherwise -1.
+     * @throws SocketException if there is an error obtaining the traffic class or type-of-service value.
+     */
+    public synchronized int getTrafficClass() throws SocketException {
+        if(channel instanceof SocketChannel){
+            return ((SocketChannel)channel).socket().getTrafficClass();
+        }else{
+            return -1;
+        }
+    }
 }
Index: httpcore-nio/src/main/java/org/apache/http/impl/nio/NHttpConnectionBase.java
===================================================================
--- httpcore-nio/src/main/java/org/apache/http/impl/nio/NHttpConnectionBase.java	(revision 1297407)
+++ httpcore-nio/src/main/java/org/apache/http/impl/nio/NHttpConnectionBase.java	(working copy)
@@ -31,6 +31,7 @@
 import java.net.InetAddress;
 import java.net.InetSocketAddress;
 import java.net.SocketAddress;
+import java.net.SocketException;
 import java.nio.channels.ReadableByteChannel;
 import java.nio.channels.WritableByteChannel;
 
@@ -61,6 +62,7 @@
 import org.apache.http.impl.nio.codecs.LengthDelimitedEncoder;
 import org.apache.http.impl.nio.reactor.SessionInputBufferImpl;
 import org.apache.http.impl.nio.reactor.SessionOutputBufferImpl;
+import org.apache.http.impl.nio.reactor.IOSessionImpl;
 import org.apache.http.io.HttpTransportMetrics;
 import org.apache.http.nio.reactor.EventMask;
 import org.apache.http.nio.reactor.IOSession;
@@ -467,4 +469,30 @@
         return buffer.toString();
     }
 
+    /**
+     * Sets the traffic class in the session if it is an {@link IOSessionImpl}
+     *  
+     * @param tc the new Traffic Class. Must be 0 <= tc <= 255. 0 is default.
+     * @throws SocketException if there is an error setting the traffic class or type-of-service.
+     * @throws IllegalArgumentException if tc is not a valid traffic class value.
+     */
+    public void setTrafficClass(int tc) throws SocketException {
+        if(session instanceof IOSessionImpl){
+            ((IOSessionImpl)session).setTrafficClass(tc);
+        }
+    }
+
+    /**
+     * Gets the traffic class from the session if it is an {@link IOSessionImpl}
+     *  
+     * @return int session.getTrafficClass() if the session is a {@link IOSessionImpl}, otherwise -1.
+     * @throws SocketException if there is an error setting the traffic class or type-of-service.
+     */
+    public int getTrafficClass() throws SocketException {
+        if(session instanceof IOSessionImpl){
+            return ((IOSessionImpl)session).getTrafficClass();
+        }else{
+            return -1;
+        }
+    }
 }
