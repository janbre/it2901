Index: modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/HttpCoreNIOSender.java
===================================================================
--- modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/HttpCoreNIOSender.java	(revision 1297417)
+++ modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/HttpCoreNIOSender.java	(working copy)
@@ -43,8 +43,10 @@
 import org.apache.http.entity.BasicHttpEntity;
 import org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor;
 import org.apache.http.impl.nio.reactor.SSLIOSessionHandler;
+import org.apache.http.impl.nio.DefaultNHttpServerConnection;
 import org.apache.http.nio.NHttpClientConnection;
 import org.apache.http.nio.NHttpClientHandler;
+import org.apache.http.nio.NHttpServerConnection;
 import org.apache.http.nio.params.NIOReactorPNames;
 import org.apache.http.nio.reactor.IOEventDispatch;
 import org.apache.http.nio.reactor.IOReactorExceptionHandler;
@@ -71,6 +73,7 @@
 import java.net.InetSocketAddress;
 import java.net.MalformedURLException;
 import java.net.URL;
+import java.net.SocketException;
 import java.util.*;
 
 /**
@@ -466,6 +469,24 @@
         removeUnwantedHeaders(msgContext);
 
         ServerWorker worker = (ServerWorker) msgContext.getProperty(Constants.OUT_TRANSPORT_INFO);
+        
+        // DIFFSERV CHANGES
+        NHttpServerConnection conn = worker.getConn();
+        if(conn instanceof DefaultNHttpServerConnection){
+            try{
+                Object tc = msgContext.getProperty(NhttpConstants.TRAFFIC_CLASS);
+                if(tc != null && tc instanceof Integer){
+                    ((DefaultNHttpServerConnection)conn).setTrafficClass((Integer)tc);
+                }
+            }catch(SocketException se){
+                log.warn("Could not set Diffserv: " +
+                        se.getMessage(), se);
+            }catch(IllegalArgumentException iae){
+                log.warn("Diffserv value out of range: " +
+                        iae.getMessage(), iae);
+            }
+        }
+
         HttpResponse response = worker.getResponse();
 
         OMOutputFormat format = NhttpUtil.getOMOutputFormat(msgContext);
Index: modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/NhttpConstants.java
===================================================================
--- modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/NhttpConstants.java	(revision 1297417)
+++ modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/NhttpConstants.java	(working copy)
@@ -153,4 +153,6 @@
      */
     public static final String SO_TIMEOUT_RECEIVER = "http.socket.timeout.receiver";
     public static final String SO_TIMEOUT_SENDER = "http.socket.timeout.sender";
+
+    public static final String TRAFFIC_CLASS = "TRAFFIC_CLASS";
 }
